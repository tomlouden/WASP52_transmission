# -*- coding: utf-8 -*-
from pylab import *
from scipy.optimize import minimize
from spot_model import spotty_transit

def main():
  #start = 4100
  #width = 200

  #specbin = []
  #for i in range(1,45/2):
    #specbin += [start + width*i]

  #print specbin

  #quit()

# the result with quadratic limb darkening
  x = array([4250, 4350, 4450, 4550, 4650, 4750, 4850, 4950, 5050, 5150, 5250, 5350, 5450, 5550, 5650, 5750, 5850, 5950, 6050, 6150, 6250, 6350, 6450, 6550, 6650, 6750, 6850, 6950, 7050, 7150, 7250, 7350, 7450, 7550, 7650, 7750, 7850, 7950, 8050, 8150, 8250, 8350, 8450])
  y = array([0.17175133634335385, 0.16738710706900295, 0.1714643850504296, 0.16606750464953746, 0.17303480661778442, 0.16930036990850295, 0.16892110436944827, 0.16660817748759563, 0.1652128955497317, 0.16471507133214353, 0.16270961033970355, 0.16729505118254395, 0.16456316491843637, 0.16594754393431305, 0.1627679137103677, 0.16702217491788168, 0.16480636372433841, 0.1637405075641159, 0.16540902470496099, 0.16314631115244776, 0.1626721109894087, 0.16569746491432649, 0.16387087919040447, 0.16500157014553224, 0.16624193202974952, 0.16169826052947658, 0.16507692865197704, 0.16043182922566634, 0.16547002745175535, 0.16513881404176514, 0.16360746679865382, 0.16282407163743748, 0.16503984337081479, 0.16317749449267974, 0.16421939182060444, 0.16174226865789648, 0.16345321075680103, 0.16424258819528093, 0.16415961307192423, 0.1653293205671138, 0.166416560110836, 0.15983499659222963, 0.16643256597533448])
  yerr = array([0.0045905025103646219, 0.0065232870576734329, 0.0035278386998267141, 0.00066907148291678569, 0.0083244357203307289, 0.0033418243768255371, 0.0054680132987401367, 0.0063667131880127698, 0.0030348398044783972, 0.003949907959476545, 0.0052655708537936788, 0.00073046300015709882, 0.0039017534917979001, 0.0060025035751731862, 0.0029341046315833961, 0.0030215250815691617, 0.0062407186628745965, 0.002843689231445185, 0.0035407769967632408, 0.0005730995785799617, 0.0039608205372721056, 0.0027999346826689856, 0.0056436590745724052, 0.0066590704086073125, 0.0026547311987112918, 0.0029007074505050913, 0.002864916963224, 0.00027216885009295571, 0.0036261916769219503, 0.0028713132789040053, 0.0052571469861460336, 0.0012878236160786549, 0.0027546609634659758, 0.00064881090738863904, 0.0029120059778752891, 0.0012229123838154372, 0.0038921344611159399, 0.002798112165975526, 0.0007650759411281583, 0.0070186662358174999, 0.0031454559673468746, 0.0051411931382209413, 0.0029361972943556746])

# the result with no limb darkening fit
  #x = array([4150, 4250, 4350, 4450, 4550, 4650, 4750, 4850, 4950, 5050, 5150, 5250, 5350, 5450, 5550, 5650, 5750, 5850, 5950, 6050, 6150, 6250, 6350, 6450, 6550, 6650, 6750, 6850, 6950, 7050, 7150, 7250, 7350, 7450, 7550, 7650, 7750, 7850, 7950, 8050, 8150, 8250, 8350, 8450])
  #y = array([0.16564688109129569, 0.16994118582331114, 0.16407255714095573, 0.16503026394505485, 0.16569546316463918, 0.16919054288404439, 0.16361423670404882, 0.1648507232150363, 0.16463102198461851, 0.16299199688403185, 0.16085144853629654, 0.15899917322761239, 0.16427581677571318, 0.16151697423754235, 0.16220144776350651, 0.15916106867411661, 0.16362792845059287, 0.16177441856182675, 0.16126091554827074, 0.16357871263952833, 0.16175462829287027, 0.16099218202450885, 0.1638751506799058, 0.16213708539505162, 0.16331113372971826, 0.16410667444616472, 0.16041152107685444, 0.16373194930641663, 0.15973357449644437, 0.16495709084750507, 0.16406196557878183, 0.16327489550119947, 0.16205739006377609, 0.16422733456755498, 0.16375175771525821, 0.16266127733811467, 0.16104961641577767, 0.16382765505460448, 0.16227897022476653, 0.16397545862037952, 0.16196206910525535, 0.16243706766227634, 0.15763291274025817, 0.16961254518440652])
  #yerr= array([0.0073365564540961697, 0.001739769606463252, 1.0, 9.5367431640625e-07, 0.00095874724602302772, 0.0010275672417902791, 0.00093959067353672902, 0.00022119440087358243, 0.00079446056265235275, 0.00074745585463780058, 0.0007312044194234716, 0.0007195315050025112, 0.00059996915056515724, 0.00063141533741951472, 0.00027639060020308363, 0.00036607707853233745, 2.2214675896397652e-05, 0.00056607384083320292, 0.0015024284579422951, 0.00012447842919624679, 0.00054612793654081786, 0.00055237298478003148, 2.4973055675810894e-06, 0.00028376483918263147, 6.3259597594364163e-06, 0.00052823506391892099, 6.3532858467184384e-06, 0.00050965546128475792, 2.5556294630670576e-05, 0.0006723036429098784, 0.00057508690129491103, 0.00056327176465028369, 1.0, 0.00037157719401123237, 0.00010042789077630964, 0.00014556206981306482, 0.00073511358565535084, 1.9469909904746773e-05, 0.00075721121204789816, 0.00052267813880880467, 0.00067181480029609617, 0.00071444442498267758, 2.132480599880018e-06, 0.00036483745503151346])

# the result with no quadratic limd darkening plus constraints
  x = array([4150, 4250, 4350, 4450, 4550, 4650, 4750, 4850, 4950, 5050, 5150, 5250, 5350, 5450, 5550, 5650, 5750, 5850, 5950, 6050, 6150, 6250, 6350, 6450, 6550, 6650, 6750, 6850, 6950, 7050, 7150, 7250, 7350, 7450, 7550, 7650, 7750, 7850, 7950, 8050, 8150, 8250, 8350, 8450])
  y = array([0.16796034316652628, 0.16542004415801448, 0.15965915410399178, 0.17469896785322542, 0.17311889487610191, 0.1774767062726888, 0.17449488921144282, 0.17080655354958901, 0.16551499236146733, 0.16654406075055275, 0.16641475638759193, 0.17004158287179225, 0.17197045106055336, 0.16749500849320509, 0.16627751249768008, 0.16510223216622802, 0.16741296641042544, 0.16725515936302832, 0.16364363965602888, 0.16658729968853467, 0.16251050865447975, 0.16427899592657011, 0.1657333933247743, 0.16117028360353244, 0.16752299998339581, 0.16281247908833038, 0.16645973058350594, 0.16792519659568866, 0.16439023667786212, 0.17107689379412933, 0.16739468732515925, 0.16899091260239713, 0.16492832384996783, 0.16748280335308935, 0.16441885400979273, 0.16786584555683662, 0.16247275589946325, 0.15603670839862971, 0.16891648448678689, 0.16589244720909957, 0.16529350250979813, 0.17158128998667385, 0.16693159430428925, 0.1793803732056658])
  yerr = array([0.0075732600757547662, 0.0033794243146258204, 0.0017622408236481213, 0.0014971276671329546, 0.001963618420923146, 0.0018703309059925038, 0.00148179244891133, 0.00092883993911013036, 0.0015483448003511453, 0.00074070718147357538, 0.012895051290285219, 0.0026604155424706545, 0.00069063540266893042, 0.0010771870521873155, 0.0011078854069301288, 0.0006296578122492191, 0.0013647763599855881, 0.00053073009118416556, 0.00055416441822840026, 0.001013223176540257, 0.0010239931800476152, 0.00069137754664720002, 0.00086127334765570703, 0.001030398283429546, 0.0007320459406732451, 0.00060869301234261933, 0.00053214213067040688, 0.0008012076089213211, 0.0010162730526387814, 0.00057834824527695067, 0.00054520074293535334, 0.00025637595790119471, 0.00065786876613569095, 0.0014310292348160684, 0.00075182207440023334, 0.00092681940016866443, 0.00080294469528868089, 0.00082266167878809358, 0.00077974874615559036, 0.00070951452781978469, 0.004045094404915189, 0.00045971925703509745, 0.00094072460172003641, 0.00060613049842037775])


# the result with the bins twice the size.

  x = array([4300, 4500, 4700, 4900, 5100, 5300, 5500, 5700, 5900, 6100, 6300, 6500, 6700, 6900, 7100, 7300, 7500, 7700, 7900, 8100, 8300])
  y = array([0.16358259382918083, 0.17478057649505885, 0.17667093370902362, 0.1685904731138069, 0.1654579435331506, 0.16812705268266223, 0.16665866334039164, 0.16558447371040819, 0.1651082508258318, 0.16764092119283702, 0.16427067144203858, 0.16448147251632358, 0.16422096984879098, 0.16781067581570583, 0.16764287144565884, 0.16595166901600819, 0.16758675730390846, 0.16544904368044794, 0.16801226520808749, 0.16501001312513697, 0.16881855251724689])
  yerr = array([0.0010953027628463339, 0.001800320560184676, 0.0014055939622057384, 0.0010728749872703795, 0.00061492170419052386, 0.0005665859898825958, 0.00051710272694658471, 0.00056753645410913896, 0.00080296105837070295, 0.0011464720328043299, 0.00051481555537027555, 0.0016320502897338867, 0.00040218589131929544, 0.00040083988650551001, 0.00043229573084518094, 0.00054629410555331187, 0.00074107300665810004, 0.00051214022042820782, 0.00044516644828600135, 0.00089957755096949348, 0.001042758040036555])


# the 4 200 A models
  x = array([4050.0, 4250.0, 4450.0, 4650.0, 4850.0, 5050.0, 5250.0, 5450.0, 5650.0, 5850.0, 6050.0, 6250.0, 6450.0, 6650.0, 6850.0, 7050.0, 7250.0, 7450.0, 7650.0, 7850.0, 8050.0, 8250.0])
  y = array([0.16342610482135625, 0.17012907188192766, 0.16877399140265481, 0.17221668503071619, 0.17303667657458482, 0.17010468798958781, 0.16704251690619187, 0.16751538287363876, 0.16795841789542118, 0.16736204241702221, 0.16490622098502916, 0.16572582315079176, 0.16601584982690518, 0.16639732981886177, 0.162177132656216, 0.16670188687688622, 0.16509913790466776, 0.16383385570642744, 0.16326185776504754, 0.1657587888598886, 0.16266224780671756, 0.16793642163387215])
  yerr = array([0.0023439790320342853, 0.0037430947885805955, 0.0014055642142206408, 0.0027184148217533764, 0.00055598146683066981, 0.0010111862792667511, 0.00046880040351225352, 0.00057903467223157712, 0.00078989356392211458, 0.00041382818481157054, 0.00039048998952220083, 0.0001111524433153743, 0.00041005269172789463, 0.00047893217576166954, 0.0011361340262121455, 0.00077110381396763362, 0.00044541618750059591, 0.00041507192623515963, 0.00042669539369660965, 0.0010059195223710007, 0.00041400831941715017, 0.000128212672826256])

  x = array([4100.0, 4300.0, 4500.0, 4700.0, 4900.0, 5100.0, 5300.0, 5500.0, 5700.0, 5900.0, 6100.0, 6300.0, 6500.0, 6700.0, 6900.0, 7100.0, 7300.0, 7500.0, 7700.0, 7900.0, 8100.0, 8300.0])
  y = array([0.16198369194043519, 0.16458595810730817, 0.16929305832975097, 0.17642224828554715, 0.17075893639442172, 0.167184126635751, 0.16846019261522283, 0.16727633655857316, 0.16641163122933766, 0.16638606107343043, 0.16447163801392337, 0.1659595191674049, 0.16569349545243778, 0.16508181566668687, 0.1618419776306903, 0.16800972006214931, 0.16499007006574393, 0.16390080131374507, 0.16378675590487962, 0.16373546785608806, 0.16426892324320638, 0.1659484303341503])
  yerr = array([0.0023644369502292739, 0.0012981277894602787, 0.00051952022649596314, 0.00065108044491394418, 0.00058937211517202329, 0.00056269171653920702, 0.00093709800469547516, 0.00066771796566806208, 0.00038964069641791744, 0.00039738705896492655, 0.00029115619246652681, 0.00068737957314824133, 0.00074604218959434439, 0.00064428493025280129, 0.0012670859402076544, 0.00031447980363070549, 0.00035619921095150715, 0.00040754518645238537, 0.00097456179847171549, 0.0021260522983182024, 0.00093681996848496679, 1.1151778311738591e-05])

  #x = array([4150.0, 4350.0, 4550.0, 4750.0, 4950.0, 5150.0, 5350.0, 5550.0, 5750.0, 5950.0, 6150.0, 6350.0, 6550.0, 6750.0, 6950.0, 7150.0, 7350.0, 7550.0, 7750.0, 7950.0, 8150.0, 8350.0])
  #y = array([0.16438998966718441, 0.16292086031142614, 0.17404540889096151, 0.17527173868410931, 0.16839683196993563, 0.1687108474859583, 0.16666218283690393, 0.16850662138005348, 0.16732269317115908, 0.16452060131108978, 0.16407300418031109, 0.1656670553130449, 0.16701405353791485, 0.16470693795024907, 0.16321469617708739, 0.16677603763880727, 0.16435814168547669, 0.16440239978832727, 0.16126843166817767, 0.16379059044330882, 0.16637693357528249, 0.16829205422063861])
  #yerr = array([0.0014677425256233621, 0.0019913730320414349, 0.00084927712959451899, 0.00045627135296443688, 0.00053988432391965046, 0.00016408226374507146, 0.00091377367520757962, 0.0005413642216536862, 0.00042292819162793866, 0.00035887336645863704, 0.00095572659352360304, 0.00046694907005795193, 0.00031308690721790016, 0.0010286307188387537, 0.00053442708805418468, 0.0011848619741476759, 0.00072259558957006782, 0.00055270202765339983, 0.00043381083495879597, 0.00041143605489277999, 0.00059307549052923592, 0.0010427756162943668])

  #x = array([4200.0, 4400.0, 4600.0, 4800.0, 5000.0, 5200.0, 5400.0, 5600.0, 5800.0, 6000.0, 6200.0, 6400.0, 6600.0, 6800.0, 7000.0, 7200.0, 7400.0, 7600.0, 7800.0, 8000.0, 8200.0, 8400.0])
  #y = array([0.16702214362983214, 0.16885630043144123, 0.17110871581558904, 0.17410090795278008, 0.16779057680782664, 0.16548348247586886, 0.16629233887789441, 0.16713792721159848, 0.16760367312391203, 0.16534661084059221, 0.16376031639198227, 0.16561945068058856, 0.16735282662221732, 0.16897518828591135, 0.16484826373452144, 0.16467677594313121, 0.16573720043504228, 0.16270240222360902, 0.16243632158788138, 0.16453926659160714, 0.16842730134129719, 0.17363377024169693])
  #yerr = array([0.0017079503247552034, 0.0010952131102083184, 0.0015466425116225234, 0.00062423510592091473, 0.0014016490531636599, 0.00093607045920686741, 0.00094233937641263039, 0.00039491039471738757, 0.0013874506561238273, 0.00076516993811688149, 0.00084445744617816197, 0.0003298652930662749, 0.00073522831294642679, 0.0037099197768950326, 0.00074307373758313023, 0.00073171691456337012, 0.00047051171646687976, 0.00038937757894525106, 0.00043944108357372958, 0.00049177239943717693, 0.0010666830537146568, 0.00097354313914841187])

  print median(yerr)/0.001

#  yerr = yerr*0 + 1.0
  yerr = yerr*549445.0e3

  index = [(x > 4400) & (x < 8000)]

  x = x[index]
  y = y[index]
  yerr = yerr[index]



  #y = y[1:-1]
  #yerr = yerr[1:-1]
  #x = x[1:-1]

  y = y*549445.0e3

  prior = [9.02350094,-14.48804932,-2.67202984]

  x = log(x*1e-10)

  f = minimize(spec_func, prior, method='BFGS',options={'eps':0.01}, args=(x,y,yerr))

  final = f['x']

  model = spec_model(final,x)
  spec = spec_model(final,x)
  spec_chi2 = sum((abs(spec - (y))/(yerr))**2)/(len(spec) - len(final) - 1)
#  yerr= yerr*spec_chi2**0.5
  f = minimize(spec_func, final, method='BFGS',options={'eps':0.01},args=(x,y,yerr))
  final = f['x']

  model = spec_model(final,x)
  spec = spec_model(final,x)
  spec_chi2 = sum((abs(spec - (y))/(yerr))**2)/(len(spec) - len(final) - 1)
#  yerr= yerr*spec_chi2**0.5
  f = minimize(spec_func, final, method='BFGS',options={'eps':0.01},args=(x,y,yerr))
  final = f['x']

  print final

  alpha = (1.48728719825*1e-6)*final[2]*1e7

  gradient = final[2]

  hess = f['hess_inv']

  errors = []

  for i in range(0,len(hess)):
    errors += [sqrt(hess[i][i])]

  errors = array(errors)

  print errors

  print 'fitted r_p', 1e7*final[0]/(549445.0e3)

  x = exp(x)*1e10

  spec = spec_model(final,log(x*1e-10))

  spec_chi2 = sum((abs(spec - (y))/(yerr))**2)

  errorbar(x,y/549445.0e3,yerr=yerr/549445.0e3,xerr=100,fmt='k.')
  plot(x,spec/549445.0e3,'r-')

  prior = [0.3,0.175]

  contrasts = []
  finals = []
  spots_chi2 = []

  for i in range(0,2):
    contrast = 250*i
    contrasts += [contrast]
    print contrasts
    f = minimize(spot_func, prior, method='L-BFGS-B',bounds=((0,0.5),(0.1,0.2)),args=(x,y/549445.0e3,yerr/549445.0e3,contrast))
    finals += [[contrast] + list(f['x'])]
    spot = complex_spot_model(finals[-1],x)
    spots_chi2 += [sum((abs(spot - (y/549445.0e3))/(yerr/549445.0e3))**2)]

  index = argmin(spots_chi2)

  spot = complex_spot_model(finals[index],x)
  spot_chi2 = spots_chi2[index]

  print 'the best spot model!'
  print finals[index]

  print 'no spot model'
  print finals[0]

  plot(x,spot,'b-')

  null = complex_spot_model(finals[0],x)
  plot(x,null,'g-')

  null_chi2 = sum((abs(null - (y/549445.0e3))/(yerr/549445.0e3))**2)

  print 'null chi2,BIC', null_chi2,null_chi2+1.0*log(len(spec))
  print 'spot chi2,BIC', spot_chi2,spot_chi2+3.0*log(len(spec))
  print 'spec chi2,BIC', spec_chi2,spec_chi2+3.0*log(len(spec))

  ylabel('Transit depth')
  xlabel('Wavelength (A)')

  print alpha, 'alpha', (gradient)

  show()

def flat_func(x,wvl,data,errors):

  model = flat_model(x,wvl)
  
  chi2 = sum(((model - data)/errors)**2)

  print x
  print chi2
  print chi2/(len(model) - len(x) - 1)

  return chi2

def flat_model(x,wvl):
  baseline = x[0]

  model = [baseline]*len(wvl)

  model = array(model)

  return model

def spec_func(x,wvl,data,errors):

  model = spec_model(x,wvl)
  
  chi2 = sum(((model - data)/errors)**2)

  print x
  print chi2
  print chi2/(len(model) - len(x) - 1)

  return chi2

def spec_model(x,wvl):
  baseline = x[0]*1.0e7
  break_point = x[1]

#  break_point = log(5000)

  gradient = x[2]*1.0e7


  #'correct' answer
  gradient = -3.74527348*1e7

  model = [baseline]*len(wvl)

  for i in range(0,len(model)):
    if wvl[i] < break_point:
      dif = wvl[i] - break_point
      model[i] += dif*gradient

  model = array(model)

  return model

def spot_func(x,wvl,data,errors,contrast):
  
#  model = simple_spot_model(x,wvl)

  x = [contrast] + list(x)

  model = complex_spot_model(x,wvl)

  #show()
  #plot(wvl,model)
  #plot(wvl,data)
  #show()


  chi2 = sum(((model - data)/errors)**2)

  print x
  print chi2
  print chi2/(len(model) - len(x) - 1)

  return chi2

def complex_spot_model(x,wvl):

  contrast = abs(x[0])
  spot_coverage = abs(x[1])
  transit_depth = abs(x[2])

  spot_lim = 0.5
  transit_lim = 0.25

  if spot_coverage > spot_lim:
    spot_coverage = spot_lim

  if transit_depth > transit_lim:
    transit_depth = transit_lim

  #spot_coverage = 0.3
  #transit_depth = 0.152

  R = 300
  P = 'P00'
  v = 2
  t = 5000
  g = 4.5

  model = spotty_transit(spot_coverage,transit_depth,R,P,v,t,g,contrast,wvl,bin_width=200)

  return model


def simple_spot_model(x,wvl):

  T = 5000.0
  
  T_contrast = abs(x[0])

  spot_coverage = abs(x[1])

  if spot_coverage > 0.2:
    spot_coverage = 0.2

  R_p = x[2]
  
  Spot_T = T - T_contrast

  width = 100*1e-10

  star_spec = black_body(T,wvl)*width

  spot_spec = black_body(Spot_T,wvl)*width

  out_transit = star_spec*(1.0-spot_coverage) + spot_spec*spot_coverage
  in_transit = star_spec*(1.0-spot_coverage)*(1.0-(R_p**2.0)) + spot_spec*spot_coverage

  ratio = in_transit/out_transit

  model = sqrt(1.0-ratio)

  return model

def black_body(T,wvl):

  wvl = wvl*1e-10

  h = 6.62606957e-34
  c = 299792458.0
  kb = 1.3806488e-23

  model = (2.0*h*c**2/wvl**5)*(1.0/((exp(h*c/(wvl*kb*T)))-1.0))

  return model

main()